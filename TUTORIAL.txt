http://demo11.local/


http://demo11.local/login


http://demo11.local/home

admin@example.com
secret

http://demo11.local/users



http://demo11.local/users




USERS:
http://demo11.local/clients


$ php artisan make:model Currency -m


https://gist.github.com/voskobovich/537b2000108e4781f70b

#recreates everything
#php artisan migrate:refresh
 
php artisan migrate
php artisan migrate:rollback


php artisan make:model ExchangeRate -m
php artisan migrate

ONE to ONE relation:
https://appdividend.com/2017/10/12/laravel-one-to-one-eloquent-relationships/


php artisan make:model Wallet -m

ALTER TABLE `demo11_local`.`users` 
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
ADD PRIMARY KEY (`id`);
;


php artisan migrate


php artisan make:model Transaction -m
php artisan migrate

php artisan make:controller ExchangeRateController --resource
php artisan make:controller ClientController --resource

#https://github.com/parths049/money-transfer
php artisan make:controller WalletController --resource (Account I prefer naming but for this example lets leave as MODEL name in our Business DOMAIN)
php artisan make:controller TransactionController --resource  (Only POST supported)


https://stackoverflow.com/questions/29255803/correct-way-of-nesting-dynamic-resource-controllers-with-laravel-when-creating-a

#Change to list of transaction REST API protocall
https://github.com/mfvanek/money-transfer-rest-api